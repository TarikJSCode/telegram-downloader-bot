import os
import re
import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes
import yt_dlp
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –∑ .env
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –§—É–Ω–∫—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ
def download_video(url: str, output_path: str = "video.mp4", cookies_file: str = None) -> str:
    ydl_opts = {
        'outtmpl': output_path,
        'format': 'mp4',
        'quiet': True,
    }

    if cookies_file and os.path.exists(cookies_file):
        ydl_opts['cookiefile'] = cookies_file

    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        ydl.download([url])

    return output_path

# –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ URL-–∞–¥—Ä–µ—Å–∏
    if re.match(r'https?://(www\.)?(tiktok\.com|instagram\.com)/', text):
        await update.message.reply_text("‚è≥ –ó–∞—á–µ–∫–∞–π—Ç–µ, –π–¥–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ...")

        try:
            # –í–∫–∞–∑–∞—Ç–∏ —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –∫—É–∫—ñ–≤
            cookies_file = "path/to/your/cookies.txt"  # –ó–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –∫—É–∫—ñ–≤
            file_path = download_video(text, cookies_file=cookies_file)
            await update.message.reply_video(video=open(file_path, 'rb'))
            os.remove(file_path)
        except Exception as e:
            await update.message.reply_text(f"‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞:\n{e}")
    else:
        await update.message.reply_text("‚ö†Ô∏è –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –¥—ñ–π—Å–Ω—É URL-–∞–¥—Ä–µ—Å—É –Ω–∞ –≤—ñ–¥–µ–æ –∑ TikTok –∞–±–æ Instagram.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    app.run_polling()
